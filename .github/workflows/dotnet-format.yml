# This is a basic workflow to help you get started with Actions

name: Lint on PR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Built-in token generated by Github Actions

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      
      - name: Show dotnet version
        run: dotnet --version
      
      - name: Install dotnet-format tool
        run: dotnet tool install -g dotnet-format
        
      - name: Run dotnet format
        run: dotnet-format ./NotificationsPoC.sln

      - name: Commit files
        run: |
          git config --global user.name 'Github Actions Linter'
          git config --global user.email '@frontlineed.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git checkout ${{ github.head_ref }}
          git commit -am "Run dotnet-format on solution."
          git push